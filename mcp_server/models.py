# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-29T11:48:56+00:00

from __future__ import annotations

from typing import List, Optional

from pydantic import BaseModel, Field


class Contact(BaseModel):
    type: Optional[str] = Field(None, description='Contact type', examples=['Home'])
    value: Optional[str] = Field(
        None, description='Contact value', examples=['14155550100']
    )


class DID(BaseModel):
    custom_tag: Optional[str] = Field(
        None,
        description='Custom tag associated with the phone number',
        examples=['My Tag'],
    )
    phone_number: Optional[str] = Field(
        None, description='Phone number', examples=['14155550100']
    )


class DetailedInvalidParam(BaseModel):
    name: Optional[str] = Field(None, description='Invalid property name')
    reason: Optional[str] = Field(None, description='Invalid property reason')


class ErrorResponse(BaseModel):
    msg: Optional[str] = Field(None, description='Error message')
    status: Optional[float] = Field(None, description='Http Response Code')


class FirstHref(BaseModel):
    href: Optional[str] = None


class LastHref(BaseModel):
    href: Optional[str] = None


class NextHref(BaseModel):
    href: Optional[str] = None


class PrevHref(BaseModel):
    href: Optional[str] = None


class SelfHref(BaseModel):
    href: Optional[str] = None


class UserExtension(BaseModel):
    dids: Optional[List[DID]] = Field(
        None, description='Collection of phone numbers assigned to the extension'
    )
    extension_number: Optional[str] = Field(
        None, description='Extension number', examples=['789']
    )


class ValidationErrorsResponse(BaseModel):
    instance: Optional[str] = Field(None, description='Error Track ID')
    invalid_parameters: Optional[List[DetailedInvalidParam]] = Field(
        None, description='Invalid parameters and their reason for failing'
    )
    status: Optional[float] = Field(None, description='Error status code')
    title: Optional[str] = Field(None, description='Error title')


class Links(BaseModel):
    first: Optional[FirstHref] = None
    next: Optional[NextHref] = None
    prev: Optional[PrevHref] = None
    self: Optional[SelfHref] = None


class User(BaseModel):
    contact_numbers: Optional[List[Contact]] = Field(
        None, description='Collection of contact objects'
    )
    email: Optional[str] = Field(
        None,
        description='Email address of the user',
        examples=['john.smith@example.com'],
    )
    extensions: Optional[List[UserExtension]] = Field(
        None, description='Collection of extension objects'
    )
    first_name: Optional[str] = Field(
        None, description='First name of the user', examples=['John']
    )
    id: Optional[float] = Field(
        None, description='Unique identifier of the user', examples=[869048]
    )
    last_name: Optional[str] = Field(
        None, description='Last name of the user', examples=['Smith']
    )
    login_name: Optional[str] = Field(
        None, description='Login name of the user', examples=['jsmith']
    )


class UserEmbeddedObject(BaseModel):
    data: Optional[User] = None


class UserHalResponse(BaseModel):
    field_embedded: Optional[UserEmbeddedObject] = Field(None, alias='_embedded')
    field_links: Optional[Links] = Field(None, alias='_links')
    page: Optional[float] = Field(None, description='Current page number', examples=[1])
    page_size: Optional[float] = Field(
        None, description='Number of records per page', examples=[10]
    )
    total_items: Optional[float] = Field(
        None, description='Total number of records', examples=[100]
    )
    total_pages: Optional[float] = Field(
        None, description='Total number of pages', examples=[10]
    )


class UsersEmbeddedObject(BaseModel):
    data: Optional[List[User]] = None


class UsersHalResponse(BaseModel):
    field_embedded: Optional[UsersEmbeddedObject] = Field(None, alias='_embedded')
    field_links: Optional[Links] = Field(None, alias='_links')
    page: Optional[float] = Field(None, description='Current page number', examples=[1])
    page_size: Optional[float] = Field(
        None, description='Number of records per page', examples=[10]
    )
    total_items: Optional[float] = Field(
        None, description='Total number of records', examples=[100]
    )
    total_pages: Optional[float] = Field(
        None, description='Total number of pages', examples=[10]
    )
